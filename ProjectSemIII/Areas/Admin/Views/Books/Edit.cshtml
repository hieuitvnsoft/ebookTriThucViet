@model ProjectSemIII.Areas.Admin.Models.DataModel.Book

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}


<h2>Chỉnh sửa thông tin</h2>
@using (Html.BeginForm("Edit", "Books", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.BookId)

        <div class="form-group">
            @Html.LabelFor(model => model.BookName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.BookName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BookName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">Thể loại</div>
            <div class="col-md-8">
                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">Nhà xuất bản</div>
            <div class="col-md-8">
                @Html.DropDownList("PublisherId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PublisherId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">Tác giả</div>
            <div class="col-md-8">
                @Html.DropDownList("AuthorId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AuthorId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublishingYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PublishingYear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PublishingYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sale, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Sale, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sale, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BookImage1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                <input type="file" onchange="onFileSelected1(event)" name="PictureUpload1" id="PictureUpload1" class="form-control-file" />
                <img id="img1" src="~/Areas/Admin/Content/ImageBook/@Model.BookImage1" width="80" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BookImage2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                <input type="file" onchange="onFileSelected2(event)" name="PictureUpload2" id="PictureUpload2" class="form-control-file" />
                <img id="img2" src="~/Areas/Admin/Content/ImageBook/@Model.BookImage2" width="80" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BookImage3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                <input type="file" onchange="onFileSelected3(event)" name="PictureUpload3" id="PictureUpload3" class="form-control-file" />
                <img id="img3" src="~/Areas/Admin/Content/ImageBook/@Model.BookImage3" width="80" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StatusAvarible, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
               @Html.DropDownList("StatusAvarible", (IEnumerable<SelectListItem>)ViewBag.AvaribleItem, new { @class = "control-label col-md-2" })
                @Html.ValidationMessageFor(model => model.StatusAvarible, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StatusOn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.DropDownList("StatusOn", (IEnumerable<SelectListItem>)ViewBag.StatusItem, new { @class = "control-label col-md-2" })
                @Html.ValidationMessageFor(model => model.StatusOn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-8">
                <input type="submit" value="Save" class="btn btn-default" style="border:1px solid #808080" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Quay trở lại", "Index",new { }, new {@class="btn btn-primary"})
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Areas/Admin/Content/ckeditor/ckeditor.js"></script>
    <script>
        CKEDITOR.replace('Description');
    </script>
    <script>
        function onFileSelected1(event) {
            var selectedFile = event.target.files[0];
            var reader = new FileReader();

            var imgtag = document.getElementById("img1");
            imgtag.title = selectedFile.name;

            reader.onload = function (event) {
                imgtag.src = event.target.result;
            };

            reader.readAsDataURL(selectedFile);
        }
    </script>
<script>
        function onFileSelected2(event) {
            var selectedFile = event.target.files[0];
            var reader = new FileReader();

            var imgtag = document.getElementById("img2");
            imgtag.title = selectedFile.name;

            reader.onload = function (event) {
                imgtag.src = event.target.result;
            };

            reader.readAsDataURL(selectedFile);
        }
</script>
<script>
        function onFileSelected3(event) {
            var selectedFile = event.target.files[0];
            var reader = new FileReader();

            var imgtag = document.getElementById("img3");
            imgtag.title = selectedFile.name;

            reader.onload = function (event) {
                imgtag.src = event.target.result;
            };

            reader.readAsDataURL(selectedFile);
        }
</script>
}